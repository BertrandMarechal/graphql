type User {
	id: ID!
	name: String!
	username: String!
	email: String!
	address: Address!
	phone: String!
	website: String!
	company: Company!
}
type Address {
	street: String!
	suite: String!
	city: String!
	zipcode: String!
	geo: Geo!
}
type Geo {
	lat: Float!
	lng: Float!
}
type Company {
	name: String!
	catchPhrase: String!
	bs: String!
}
type Comment {
	postId: ID!
	id: ID!
	name: String!
	email: String!
	body: String!
}
type Photo {
	albumId: ID!
	id: ID!
	title: String!
	url: String!
	thumbnailUrl: String!
}
type Post {
	userId: ID!
	id: ID!
	title: String!
	body: String!
}
type Todo {
	userId: ID!
	id: ID!
	title: String!
	completed: Boolean!
}
type UserPaginated {
	totalCount: Int, 
	users: [User]!
}
type CommentPaginated {
	totalCount: Int, 
	comments: [Comment]!
}
type PhotoPaginated {
	totalCount: Int, 
	photos: [Photo]!
}
type PostPaginated {
	totalCount: Int, 
	posts: [Post]!
}
type TodoPaginated {
	totalCount: Int, 
	todos: [Todo]!
}

type Query {
	getUsers(first: Int,after: Int): UserPaginated
	getUser(id: ID!): User

	getComments(first: Int,after: Int): CommentPaginated
	getComment(id: ID!): Comment

	getPhotos(first: Int,after: Int): PhotoPaginated
	getPhoto(id: ID!): Photo

	getPosts(first: Int,after: Int): PostPaginated
	getPost(id: ID!): Post

	getTodos(first: Int,after: Int): TodoPaginated
	getTodo(id: ID!): Todo
}

type Mutation {
	updateUser(id: ID!, name: String!, username: String!, email: String!, address: Address!, phone: String!, website: String!, company: Company!): User!
	deleteUser(id: ID!): User!
	insertUser(id: ID!, name: String!, username: String!, email: String!, address: Address!, phone: String!, website: String!, company: Company!): User!

	updateComment(postId: ID!, id: ID!, name: String!, email: String!, body: String!): Comment!
	deleteComment(id: ID!): Comment!
	insertComment(postId: ID!, id: ID!, name: String!, email: String!, body: String!): Comment!

	updatePhoto(albumId: ID!, id: ID!, title: String!, url: String!, thumbnailUrl: String!): Photo!
	deletePhoto(id: ID!): Photo!
	insertPhoto(albumId: ID!, id: ID!, title: String!, url: String!, thumbnailUrl: String!): Photo!

	updatePost(userId: ID!, id: ID!, title: String!, body: String!): Post!
	deletePost(id: ID!): Post!
	insertPost(userId: ID!, id: ID!, title: String!, body: String!): Post!

	updateTodo(userId: ID!, id: ID!, title: String!, completed: Boolean!): Todo!
	deleteTodo(id: ID!): Todo!
	insertTodo(userId: ID!, id: ID!, title: String!, completed: Boolean!): Todo!
}